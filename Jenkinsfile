pipeline{
    agent any
    environment{
        BACKEND_IMAGE='backend-image'
        FRONTEND_IMAGE='frontend-image'
    }
    stages{
        stage('Syncronizing the Repository'){
            steps{
                checkout scm
            }
        }
        stage{
            parallel{
                stage{
                    agent {label 'linux'}
                    steps{
                        script{
                            def backendCommitId=sh(returnStdout: true, script:'git log -1 --oneline').trim().tokenize()[0]
                            docker.build("${env.BACKEND_IMAGE}:${backendCommitId}", '-f Dockerfile.Backend .')
                        }
                    }
                }
            }
        }
    }
}